/* ============================================================ */

// MIXINS

// Standard mixins and functions to help make life easier

/* ============================================================ */


// ==========================================================================
// GRID MIXINS
// ==========================================================================

// GRID WIDTH - returns a grid unit's width
@function grid-width($n) {
	@return $n * $col_width + ($n - 1) * $gutter_width;
}


// ==========================================================================
// HELPERS
// ==========================================================================

// Clear fix
@mixin clearfix {
    zoom: 1; 
    
    &:before { 
        content: ""; 
        display: table;     
    }

    &:after {
        content: ""; 
        display: table; 
        clear: both; 
    }
}


// Font Size
@mixin fsize($pxval, $baseline : $baseFontSize) {
    font-size: ($pxval / $baseline) * 100%
}

// Relative Size
@function rsize($pxval, $baseline : $baseFontSize) {
    @return ($pxval/$baseline) + em;
}




// ==========================================================================
// TEXTURE
// ==========================================================================


// ARROWS
// ==========================================================================

// 	
//  $direction: top, left, right, bottom, top-left, top-right, bottom-left, bottom-right
// 	$color: hex, rgb or rbga
// 	$size: px or em
//  
// 	@example
// 	.element{
//  	 @include arrow(top, #000, 50px);   
// 	}
//

@mixin arrow($direction, $color, $size){
    display: block;
    height: 0;
    width: 0;
    
    @if $direction == 'top' {
        border-left: $size solid transparent;
    	border-right: $size solid transparent;
    	border-bottom: $size solid $color;
    } @else if $direction == 'right' {
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
    	border-left: $size solid $color;
    } @else if $direction == 'bottom' {
        border-top: $size solid $color;
        border-right: $size solid transparent;
        border-left: $size solid transparent;
    } @else if $direction == 'left' {
        border-top: $size solid transparent;
    	border-right: $size solid $color;
    	border-bottom: $size solid transparent;
    } @else if $direction == 'top-left' {
        border-top: $size solid $color; 
        border-right: $size solid transparent;	
    } @else if $direction == 'top-right' {
        border-top: $size solid $color; 
        border-left: $size solid transparent;
    } @else if $direction == 'bottom-left' {
        border-bottom: $size solid $color; 
        border-right: $size solid transparent;	
    } @else if $direction == 'bottom-right' {
        border-bottom: $size solid $color; 
        border-left: $size solid transparent;
    }
}
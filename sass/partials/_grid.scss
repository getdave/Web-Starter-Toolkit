 /* ============================================================ */

// GRIDS

// Description:			Standard layout grid system. Can be customised via Variables

// Acknowledgements:	OOCSS - https://github.com/stubbornella/oocss
//						1140 CSS GRID - http://cssgrid.net/
//						Twitter Bootstrap Grid

/* ============================================================ */




// ==========================================================================
// MOBILE GRID
// ==========================================================================

$count: 1;
@each $col in $cols_as_string {
	#{grid-col($col,$count,'')} {
		float: none;
		clear: both;
		display: block;
		width: auto;	
		margin: 0;
		left: auto;
		right: auto;
	}
	$count: $count + 1;
}

// MOBILE COLUMNS
// ==========================================================================

@if($bMobileCols) {
	$count: 1;
	@each $col in $cols_as_string {

		$mobileColNumber: $mobileCols - 1;

		@if ($count <= $mobileCols) { // we don't all cols. Only the number specified in the _variables file
			#{grid-col($col,$count,'mobile-')} {
				width: #{grid-width($count*$mobileColNumber)};
				margin-left: $gutter_width; /* equal to 20px at 1024px */
				float: left;
				min-height: 1px;
				clear: none;
			}
			$count: $count + 1;
		}
	}
}



// ==========================================================================
// STANDARD GRID
// ==========================================================================


@media only screen and (min-width: 62em) {

	// Common definition classes
	// ==========================================================================
	$count: 1;
	@each $col in $cols_as_string {
		#{grid-col($col,$count,'')} {
			width: #{grid-width($count)};
			margin-left: $gutter_width; /* equal to 20px at 1024px */
			float: left;
			min-height: 1px;
			position: relative;
			clear: none;
		}
		$count: $count + 1;
	}


	// Push classes
	// ==========================================================================
	@if($bGridPushClasses) {
		$count: 1;
		@each $col in $cols_as_string {
			// Omit full width columns from "push" classes
			@if ($count != 12) { 	
				#{grid-col($col,$count,'push-')} {
					left: #{grid-width($count) + $gutter_width};
				}
				$count: $count + 1;
			}
		}
	}

	// Pull classes
	// ==========================================================================
	@if($bGridPushClasses) {
		$count: 1;
		@each $col in $cols_as_string {
			// Omit full width columns from "push" classes
			@if ($count != 12) { 	
				#{grid-col($col,$count,'pull-')} {
					right: #{grid-width($count) + $gutter_width};
				}
				$count: $count + 1;
			}
		}
	}
}





// ==========================================================================
// OVERIDES
// ==========================================================================


// LASTCOL 
// ==========================================================================

//
// To can avoid having to add .lastcol 
// 1) uncomment the CSS3 selectors below
// 2) comment out the .lastcol selector
// 3) make sure you don't need to support <=IE8 cos it won't work!
//

// We use :first-child because it has better support
[class*="columns"]:first-child:not(:only-child),
[class*="size"]:first-child:not(:only-child),
.firstcol {
	margin-left: 0;
}


// COLUMN VARIANTS
// ==========================================================================

// When you want a column to be full width
.full-col {
	width: auto;
	float: none;
}

// When you want a centered column
.centered {
    margin: 0 auto;
    float: none;
}




